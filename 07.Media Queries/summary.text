                ---------FLEX-------------

display: flex => заема един цял ред, без значение колко еголям елемента

display: inline-flex => ще бъде инлайн блоков елемент, т.е ще може да наместим до него друг блоков 
елемент. Ако зададем width на елементите и като сбор е по-голям от широчината на реда, тога елементите ще бъдат с широчина равна на пространството разделено на броя елемети. Т.е винаги елементите ще бъдат сбити на един ред!

flex-wrap: nowrap => това е дефолтната стойност на флекса. При нея елементите са подредени на един ред.

flex-wrap: wrap => ако пространството не стига на един ред за разпределение на клетките, чрез него елемента слиза на нов ред и така докато не се наредят всички елементи.

flex-directon: row => това е дефолтната стойност на елементите. Подредени са по хоризонтала и се върви от ляво на дясно;

flex-directon: row-reverse =>  Обръща реда на подредба от дясно на ляво, като отново се върви по хоризонтала.

flex-directon: column => Подревда елементите по вертикала като се почва от горе на долу.

flex-directon: column-reverse => Обръща реда на позициониране от долу на горе.


justify-content => Намества пространството между елементите, като в зависимост с кой directon работиме, justify-content отговаря са самото позициониране на елементите, т.е ако изберем row, той отговаря за хоризонталата, а ако изберем column, той отговаря за вертикалата.

justify-content: start => нарежда елементите от старртовата точка на нашия контейнер.

justify-content: end => елементите се подреждът от другия край, различно е от reverse, защото тук се изместват а не се преподреждът.

justify-content: center => центрира елементите.

justify-content: space-between => задавайки го цялото празно пространство, което е налично се разпределя между елементите поравно.От ляво  и от дясно на контенера не се оставя празно пространство

justify-content: space-around => празното пространство пак се калкулира и се разделя между клетките, само че този път се оставя и от ляво и от дясно по 1/2 част.

justify-content: space-evenly => тук празното пространство се разпределя по равно между полетата и от ляво и от дясно.

align-items => използва се за позициониране по вертикала ако използваме row, и по хоризонтала ако използваме column.

align-items: stretch => началната му стойност. При него всички елементи се разтягат със същата височина като най-високия елемент.   

align-items: flex-start => това ще позиционира нашите елементи в зависимост от позицията ни, т.е ако е row  елементите ще са позиционирани от горе, тъй като при row се движим от ляво на дясно и от горе на долу.

align-content => за да можем да работим адекватно има 2 неща които трябва да изпълним, първото е да имаме flex-wrap: wrap , второто е височината да е по-голяма на контейнера спрямо височината на елементите
 
gap => за пространство между редовете

margin-left или margin-right => може да се използжа при флекс


-------------Children properties Flex

order: 1 => Дефолтната стойносе е 0, ако напишем 1, то селектирания елемент отива накрая и обратно ако напишем -1, тогава отива първи  в подредбата. Ако му зададем 0, то той се връща на мястото му.

align-self: flex-start => може да промени align стойноста за конкретния селектиран елемент 

flex-shring:1 =>  това е стъпката с колко да се смалява елемента, колкото е по-голяма стъпката, толкова по бързо се намалява.

flex-grow: 1 => има начална стойност 0. Ако елемента има по-голяма стойност то той заема по голям дял от свободното пространтство

flex: 1 1 50px => flex-grow + flex-shrink + flex-basis



                ---------MEDIA QUERIES-------------

За да може да използваме респонсив дизайн трябва да добавим към html следния мета таг =>
<meta name="viewport" content="width=device-width, initial-scale=1.0">, ако не е добавено!!!

Синтаксис на responsive design =>
 @media (max-width: 600px) {
  .menu a { display: block }
}

Изпълни ако имаме максимум широчина на дисплея 600 пиксела, съдържанието в къдравите скоби, ако е по-голямо от 600 не го изпълнявай. Условието в скобите е включително. Media queries работят на основата на презаписване, т.е трябва да са позиционирани след основните стилизации!!!

Ако искаме да зададаем повече от един критерий на дисплея о=използваме следния синтаксис => 
@media (min-width: 400px) and (max-width: 600px) {}